---
# This workflow is inspired by https://docs.github.com/en/actions/use-cases-and-examples/publishing-packages/publishing-docker-images#publishing-images-to-github-packages
# We cannot use the docker/build-push-action as that action does not
# tie with our custom flow for building docker images
# FIXME in the future we should consider how to use the docker/attest-build-provenance
# action so that we can correctly create a proper provenance for the
# generated docker images.
name: Docker Image Builder

on:
    workflow_dispatch:


# Defines two custom environment variables for the workflow.
# These are used for the Container registry domain, and a name for the Docker image that this workflow builds.
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ubuntu_22.04_dev

# There is a single job in this workflow. It's configured to run on the latest available version of Ubuntu.
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
      #
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      # Uses the `docker/login-action` action to log in to the Container registry registry using
      # the account and password that will publish the packages. Once published, the packages
      # are scoped to the account defined here.
      - name: Setup Python
        uses: actions/setup-python@v5.2.0
        with:
          python-version: '3.10'
      - name: Install west
        run: |
            python -m pip install --upgrade pip
            pip install west
      - name: Update workspace
        run: |
            west update
      - name: Build core venv
        run: |
            make venv
      - name: Build the docker image
        run: |
            source venv/bin/activate \
            && ./repo-cmds.py docker build ${{ env.IMAGE_NAME }}
      - name: Log in to the Container registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push the docker image
        run: |
            source venv/bin/activate \
            && ./repo-cmds.py docker push ${{ env.IMAGE_NAME }}
